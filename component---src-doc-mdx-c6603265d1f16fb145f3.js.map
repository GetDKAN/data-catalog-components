{"version":3,"sources":["webpack:///../src/doc.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"0PAMaA,G,UAAe,S,6LAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,2BADR,2BAGA,+GACA,iBAAQ,CACN,GAAM,cADR,cAGA,iJACA,iBAAQ,CACN,GAAM,YADR,YAGA,sQACA,iBAAQ,CACN,GAAM,aADR,aAGA,sQAAqP,0BAAYC,WAAW,KAAvB,UAArP,4DAAoW,0BAAYA,WAAW,KAAvB,WAApW,8D,2LAKJJ,EAAWK,gBAAiB","file":"component---src-doc-mdx-c6603265d1f16fb145f3.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/civicactions/Sites/civicactions/data-catalog-components/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"data-catalog-components\"\n    }}>{`Data Catalog Components`}</h1>\n    <p>{`A set of React components to facilitate the creation of Open Data Catalogs with React.`}</p>\n    <h2 {...{\n      \"id\": \"components\"\n    }}>{`Components`}</h2>\n    <p>{`Components are the building blocks of the library. Most components should be able to be used independently on your site.`}</p>\n    <h2 {...{\n      \"id\": \"services\"\n    }}>{`Services`}</h2>\n    <p>{`Services are mainly functions, classes, and config that components may use. The Search and Resource components are built using React's useContext and useReducer hooks. Services holds the reducer and actions for each of these components. `}</p>\n    <h2 {...{\n      \"id\": \"templates\"\n    }}>{`Templates`}</h2>\n    <p>{`Templates are components that have basic styling and layout. Usually these components will consist of multiple components in the library that are setup and ready to use. You can either pull these components into your own project using an `}<inlineCode parentName=\"p\">{`import`}</inlineCode>{` statement or copy and paste the component rewriting the `}<inlineCode parentName=\"p\">{`imports`}</inlineCode>{` and customizing it to match the style of your site.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}